name: SonarQube Security Scan

on:
  push:
    branches:
      - main

jobs:
  sonarqube:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11

      - name: SonarQube Scan
        run: |
          ./gradlew sonarqube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Get SonarQube Analysis Report
        run: |
          curl -o sonarqube-report.json $SONAR_HOST_URL/api/qualitygates/project_status?projectKey=your-project-key
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Check for Security Issues
        run: |
          # Parse SonarQube report and check for security issues
          security_issues=$(jq -r '.projectStatus.conditions[] | select(.metricKey == "security_rating" and .status == "ERROR") | .actualValue' sonarqube-report.json)
          if [ -n "$security_issues" ]; then
            echo "Security issues found: $security_issues"
            # Create a Jira issue using the Jira API (see the next step)
          else
            echo "No security issues found."
          fi
        env:
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      - name: Create Jira Issue
        if: ${{ success() && env.security_issues }}
        run: |
          # Create a Jira issue using the Jira API
          # Replace the placeholders with your Jira project key and issue details
          jira_issue_data='{
            "fields": {
              "project": {
                "key": "DEV/boards/1"
              },
              "issuetype": {
                "name": "Bug"
              },
              "summary": "Security Issue Found",
              "description": "A security issue was found in the code during SonarQube analysis."
            }
          }'
          curl -X POST -H "Authorization: Basic $JIRA_API_TOKEN" -H "Content-Type: application/json" --data "$jira_issue_data" https://your-jira-instance/rest/api/2/issue/
        env:
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          YOUR_PROJECT_KEY: "DEV/boards/1"
          YOUR_JIRA_INSTANCE: "https://arshu-test.atlassian.net/jira/software/projects/DEV/boards/1"
